<?php

namespace App\DURC\Models;
use Illuminate\Database\Eloquent\SoftDeletes;
use ftrotter\DURC\DURCModel;
use ftrotter\DURC\DURC;
//use Owen It\Auditing\Contracts\Auditable;
/*
	Note this class was auto-generated from 

DURC_northwind_model.customer by DURC.

	This class will be overwritten during future auto-generation runs..
	Itjust reflects whatever is in the database..
	DO NOT EDIT THIS FILE BY HAND!!
	Your changes go in customer.php 

*/

class customer extends DURCModel {

	 //not auditable, configured using is_auditable = 0 in config json

    

    use SoftDeletes;

        // the datbase for this model
        protected $table = 'DURC_northwind_model.customer';

	//DURC will dymanically copy these into the $with variable... which prevents recursion problem: https://laracasts.com/discuss/channels/eloquent/eager-load-deep-recursion-problem?page=1
		protected $DURC_selfish_with = [ 
			'order', //from from many
			'order_2017', //from from many
			'order_2018', //from from many
			'order_2019', //from from many
		];


	//DURC did not detect any date fields

	public $timestamps = true;
	const UPDATED_AT = 'updated_at';
	const CREATED_AT = 'created_at';
	
	protected $dates = ['deleted_at'];


	//for many functions to work, we need to be able to do a lookup on the field_type and get back the MariaDB/MySQL column type.
	static $field_type_map = [
		'id' => 'int',
		'companyName' => 'varchar',
		'lastName' => 'varchar',
		'firstName' => 'varchar',
		'emailAddress' => 'varchar',
		'jobTitle' => 'varchar',
		'businessPhone' => 'varchar',
		'homePhone' => 'varchar',
		'mobilePhone' => 'varchar',
		'faxNumber' => 'varchar',
		'address' => 'longtext',
		'city' => 'varchar',
		'stateProvince' => 'varchar',
		'zipPostalCode' => 'varchar',
		'countryRegion' => 'varchar',
		'webPage' => 'longtext',
		'notes' => 'longtext',
		'attachments' => 'longblob',
		'random_date' => 'datetime',
		'created_at' => 'datetime',
		'updated_at' => 'datetime',
		'deleted_at' => 'datetime',
	]; //end field_type_map
		
    // Indicate which fields are nullable for the UI to be able to validate required/present form elements
    protected $non_nullable_fields = [
		'id',
		'random_date',
		'created_at',
		'updated_at',
		'deleted_at',
	]; // End of nullable fields

    // Use default_values array to specify the default values for each field (if any) indicated by the DB schema, to be used as placeholder on form elements
    protected $default_values = [
		'id' => null,
		'companyName' => 'NULL',
		'lastName' => 'NULL',
		'firstName' => 'NULL',
		'emailAddress' => 'NULL',
		'jobTitle' => 'NULL',
		'businessPhone' => 'NULL',
		'homePhone' => 'NULL',
		'mobilePhone' => 'NULL',
		'faxNumber' => 'NULL',
		'address' => 'NULL',
		'city' => 'NULL',
		'stateProvince' => 'NULL',
		'zipPostalCode' => 'NULL',
		'countryRegion' => 'NULL',
		'webPage' => 'NULL',
		'notes' => 'NULL',
		'attachments' => 'NULL',
		'random_date' => null,
		'created_at' => null,
		'updated_at' => null,
		'deleted_at' => null,
	];  // End of attributes
        
    //everything is fillable by default
    protected $guarded = [];
		
    // These are validation rules used by the DURCModel parent to validate data before storage
    protected static $rules = [
		'companyName' => 'nullable',
		'lastName' => 'nullable',
		'firstName' => 'nullable',
		'emailAddress' => 'nullable',
		'jobTitle' => 'nullable',
		'businessPhone' => 'nullable',
		'homePhone' => 'nullable',
		'mobilePhone' => 'nullable',
		'faxNumber' => 'nullable',
		'address' => 'nullable',
		'city' => 'nullable',
		'stateProvince' => 'nullable',
		'zipPostalCode' => 'nullable',
		'countryRegion' => 'nullable',
		'webPage' => 'nullable',
		'notes' => 'nullable',
		'attachments' => 'nullable',
		'random_date' => 'required',
		'created_at' => 'required',
		'updated_at' => 'required',
		'deleted_at' => 'required',
	]; // End of validation rules
		        
		
//DURC HAS_MANY SECTION

/**
*	get all the order for this customer
*/
	public function order(){
		return $this->hasMany('App\order','customer_id','id');
	}


/**
*	get all the order_2017 for this customer
*/
	public function order_2017(){
		return $this->hasMany('App\order_2017','customer_id','id');
	}


/**
*	get all the order_2018 for this customer
*/
	public function order_2018(){
		return $this->hasMany('App\order_2018','customer_id','id');
	}


/**
*	get all the order_2019 for this customer
*/
	public function order_2019(){
		return $this->hasMany('App\order_2019','customer_id','id');
	}


		
		
//DURC HAS_ONE SECTION

			//DURC did not detect any has_one relationships

		
//DURC BELONGS_TO SECTION

			//DURC did not detect any belongs_to relationships

//Originating SQL Schema
/*
CREATE TABLE `DURC_northwind_model`.`customer` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `companyName` varchar(50) DEFAULT NULL,
  `lastName` varchar(50) DEFAULT NULL,
  `firstName` varchar(50) DEFAULT NULL,
  `emailAddress` varchar(50) DEFAULT NULL,
  `jobTitle` varchar(50) DEFAULT NULL,
  `businessPhone` varchar(25) DEFAULT NULL,
  `homePhone` varchar(25) DEFAULT NULL,
  `mobilePhone` varchar(25) DEFAULT NULL,
  `faxNumber` varchar(25) DEFAULT NULL,
  `address` longtext DEFAULT NULL,
  `city` varchar(50) DEFAULT NULL,
  `stateProvince` varchar(50) DEFAULT NULL,
  `zipPostalCode` varchar(15) DEFAULT NULL,
  `countryRegion` varchar(50) DEFAULT NULL,
  `webPage` longtext DEFAULT NULL,
  `notes` longtext DEFAULT NULL,
  `attachments` longblob DEFAULT NULL,
  `random_date` datetime NOT NULL,
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL,
  `deleted_at` datetime NOT NULL,
  PRIMARY KEY (`id`),
  KEY `city` (`city`),
  KEY `company` (`companyName`),
  KEY `firstName` (`firstName`),
  KEY `lastName` (`lastName`),
  KEY `zipPostalCode` (`zipPostalCode`),
  KEY `stateProvince` (`stateProvince`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci
*/


}//end of customer